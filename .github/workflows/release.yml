name: release
run-name: ${{ (github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags'))) && 'Publish to PyPI' || '(dry run) Publish to PyPI' }}

on:
  push:
    branches:
      - "master"
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.13"
      - name: check if release
        id: is-release
        run: |
          is_release=${{(github.event_name == 'release') || (github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags'))}}
          echo "value=${is_release}" | tee -a "${GITHUB_OUTPUT}"
      - name: Install requirements
        run: |
          uv pip install -U twine nox==2025.5.1
      - name: Build
        run: nox -s build

      - name:
        if: ${{ steps.is-release.outputs.value == 'false' }}
        run: |
          echo "::warning::Not a release, not uploading to PyPi"
          ls -l dist/*

      - name: Publish to PyPI
        if: ${{ steps.is-release.outputs.value == 'true' }}
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        if: ${{steps.is-release.outputs.value == 'true' }}
        with:
          name: "wheel"
          path: dist/*whl

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        if: ${{steps.is-release.outputs.value == 'true' }}
        with:
          name: "sdist"
          path: dist/*.tar.gz
